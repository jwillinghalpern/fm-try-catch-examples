SetVariable [ $autoCommitWasOn ; Get(AutoCommitState) = 0 ]
Set Auto-Commit [Off]
Try
    // Create parent invoice
    New Record
    Set Field [ Invoice::date ; Get(CurrentDate) ]
    Set Field [ Invoice::FK_Customer ; "Josh123" ]
    Set Variable [ $id ; Invoice::id ]
    
		// Create related line items
    // this will exit if go to layout fails (e.g. a trigger cancels, or permissions, or wrong layout name...)
    Go To Layout [ "LineItem" ]
    New Record
    Set Field [ LineItem::FK_Invoice ; $id ]
    Set Field [ LineItem::FK_Product ; 123 /* Nice Shirt */ ]
    Set Field [ LineItem::amount ; "$100" ]
    New Record
    Set Field [ LineItem::FK_Invoice ; $id ]
    Set Field [ LineItem::FK_Product ; 234 /* Nice Trousers */ ]
    Set Field [ LineItem::amount ; "$200" ]
		// Nested try is one option for ignoring errors in the parent block
		Try
		    Set Field [ LinItem::optionalField ; "abcdefg" ]
		Catch
		    // do nothing...
				// But we have to decide if the default behavior is to bubble up errors or have them only accessible via a Try's corresponding Catch
		End Try

    // Create confirmation email (reusable subscript)
    Perform Script [ From List: "Create Email" ; Parameter: ... ]
    // will automatically throw on non-zero Get(LastError)
    // but we can also check for custom business logic errors returned:
    If [ JSONGetElement ( Get(ScriptResult) ; "error.code" ) ]
        Set Variable [ $error ; JSONGetElement ( Get(ScriptResult) ; "error" ) ]
        Throw Error [ Message: "Create Email subscript error" ]
    End If
    // // `Throw Error If` might be a good alternative to write terser code instead of the above
		// Throw Error If [
		// 	Condition: If (
		// 		JSONGetElement ( Get(ScriptResult) ; "error.code" ) ;
		// 		Let ( $error = JSONGetElement ( Get(ScriptResult) ; "error" ) ; True )
		// 	),
		// 	Error Message: "3" ;
		// ]

    Commit Record/Request
    Go To Layout [ original ]

Catch // (Optional)
    Revert Record/Request
    Go To Layout [ original ]
    Set Variable [ $message ; JSONGetElement ( Get(ErrorInfo) ; "message" ) ]
    Set Variable [ $lineNum ; JSONGetElement ( Get(ErrorInfo) ; "lineNumber" ) ]
    Show Custom Dialog [ Title: "Error" ; Message: "Error on line: " & $lineNum & ": " & $message ]

End Try

// restore the auto-commit state, just like the error capture/abort states
If [ $autoCommitWasOn ]
    Set Auto-Commit [On]
End If


Exit Script [ "" ]